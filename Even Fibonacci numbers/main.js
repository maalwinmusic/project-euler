/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

//returns the sum of the of Fibonacci sequence, whose values does not exceed max and "isEven"
function fibonacciSum(max = 0, isEven){

    let prev = 1;
    let temp = 0;
    let curr = 2;
    let sum = 0;

    //returns the product of "n1" and "n2"
    const product = (n1, n2) => n1 + n2;
    
    while(curr < max){
        if(isEven ? (curr % 2) === 0 : (curr % 2) !== 0){
            sum += curr;
        }
        temp = curr;
        curr = product(prev, curr);
        prev = temp;
    }

    return sum;
}

console.log(fibonacciSum(4000000, true));